{"ast":null,"code":"import _objectSpread from \"/Users/rozyckj/repos/mawayRental/MawayFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { EMAIL_FIELD, NAME_FIELD, PHONE_FIELD, SURNAME_FIELD, VALUE_CHANGED, FORM_CONFIRMED } from './actions';\n\nconst requiredValidator = value => !!value;\n\nconst maxLengthValidator = (value, maxLength) => !!value && value.length < maxLength;\n\nconst minLengthValidator = (value, minLength) => !!value && value.length >= minLength;\n\nconst formValidators = {\n  [NAME_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Name is required'\n  }, {\n    validatorFn: value => minLengthValidator(value, 2),\n    errorMsg: 'Name should be minimum 2 characters long'\n  }],\n  [SURNAME_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Surname is required'\n  }, {\n    validatorFn: value => minLengthValidator(value, 2),\n    errorMsg: 'Surname should be minimum 2 characters long'\n  }],\n  [EMAIL_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Email is required'\n  }],\n  [PHONE_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Phone number is required'\n  }]\n};\nconst initialState = {\n  formValues: {\n    [NAME_FIELD]: '',\n    [SURNAME_FIELD]: '',\n    [EMAIL_FIELD]: '',\n    [PHONE_FIELD]: ''\n  },\n  formValidation: {\n    [NAME_FIELD]: {\n      isValid: false,\n      errorMsg: ''\n    },\n    [SURNAME_FIELD]: {\n      isValid: false,\n      errorMsg: ''\n    },\n    [EMAIL_FIELD]: {\n      isValid: false,\n      errorMsg: ''\n    },\n    [PHONE_FIELD]: {\n      isValid: false,\n      errorMsg: ''\n    }\n  }\n};\nexport default function confirmationStepReducer(state = initialState, action) {\n  switch (action.type) {\n    case FORM_CONFIRMED:\n      const formValidatonResults = {\n        [NAME_FIELD]: {\n          isValid: true,\n          errorMsg: ''\n        },\n        [SURNAME_FIELD]: {\n          isValid: true,\n          errorMsg: ''\n        },\n        [EMAIL_FIELD]: {\n          isValid: true,\n          errorMsg: ''\n        },\n        [PHONE_FIELD]: {\n          isValid: true,\n          errorMsg: ''\n        }\n      };\n\n      for (let formFieldKey in state.formValidation) {\n        const fieldValidators = formValidators[formFieldKey];\n        const fieldProposedValue = state.formValues[formFieldKey];\n\n        for (let validator of fieldValidators) {\n          const isValid = validator.validatorFn(fieldProposedValue);\n\n          if (!isValid) {\n            formValidatonResults[formFieldKey] = {\n              isValid,\n              errorMsg: validator.errorMsg\n            };\n            break;\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        formValidation: formValidatonResults\n      });\n\n    case VALUE_CHANGED:\n      return _objectSpread({}, state, {\n        formValues: _objectSpread({}, state.formValues, {\n          [action.field]: action.value\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/reservation-steps/confirmation-step/reducers.js"],"names":["EMAIL_FIELD","NAME_FIELD","PHONE_FIELD","SURNAME_FIELD","VALUE_CHANGED","FORM_CONFIRMED","requiredValidator","value","maxLengthValidator","maxLength","length","minLengthValidator","minLength","formValidators","validatorFn","errorMsg","initialState","formValues","formValidation","isValid","confirmationStepReducer","state","action","type","formValidatonResults","formFieldKey","fieldValidators","fieldProposedValue","validator","field"],"mappings":"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","sourcesContent":["import {EMAIL_FIELD, NAME_FIELD, PHONE_FIELD, SURNAME_FIELD, VALUE_CHANGED, FORM_CONFIRMED} from './actions';\n\nconst requiredValidator = (value) => !!value;\nconst maxLengthValidator = (value, maxLength) => !!value && value.length < maxLength;\nconst minLengthValidator = (value, minLength) => !!value && value.length >= minLength;\n\nconst formValidators = {\n    [NAME_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Name is required'}, {validatorFn:  value => minLengthValidator(value,2), errorMsg: 'Name should be minimum 2 characters long'}],\n    [SURNAME_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Surname is required'}, {validatorFn:  value => minLengthValidator(value,2), errorMsg: 'Surname should be minimum 2 characters long'}],\n    [EMAIL_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Email is required'}],\n    [PHONE_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Phone number is required'}]\n}\n\n\nconst initialState =\n    {\n        formValues: {\n            [NAME_FIELD]: '',\n            [SURNAME_FIELD]: '',\n            [EMAIL_FIELD]: '',\n            [PHONE_FIELD]: ''\n        },\n        formValidation: {\n            [NAME_FIELD]: { isValid: false, errorMsg: '' },\n            [SURNAME_FIELD]: { isValid: false, errorMsg: '' },\n            [EMAIL_FIELD]: { isValid: false, errorMsg: '' },\n            [PHONE_FIELD]: { isValid: false, errorMsg: '' }\n        }\n    }\n\n\n\n\n\nexport default function confirmationStepReducer(state = initialState, action) {\n    switch (action.type) {\n        case FORM_CONFIRMED:\n            const formValidatonResults = {\n                [NAME_FIELD]: { isValid: true, errorMsg: '' },\n                [SURNAME_FIELD]: { isValid: true, errorMsg: '' },\n                [EMAIL_FIELD]: { isValid: true, errorMsg: '' },\n                [PHONE_FIELD]: { isValid: true, errorMsg: '' }\n            };\n            for (let formFieldKey in state.formValidation) {\n                const fieldValidators = formValidators[formFieldKey];\n                const fieldProposedValue = state.formValues[formFieldKey];\n\n                for(let validator of fieldValidators)\n                {\n                    const isValid = validator.validatorFn(fieldProposedValue);\n                    if(!isValid) {\n                        formValidatonResults[formFieldKey] = { isValid,errorMsg: validator.errorMsg };\n                        break;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                formValidation: formValidatonResults\n            }\n        case VALUE_CHANGED:\n            return {\n                ...state,\n                formValues: { ...state.formValues, [action.field]: action.value }\n            }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}