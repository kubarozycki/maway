{"ast":null,"code":"var _jsxFileName = \"/Users/rozyckj/repos/mawayRental/MawayFrontend/src/extras-step/components/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchExtras, selectionChanged } from \"../actions\";\nimport { nextStep, setCurrentStepValid, setCurrentStepInvalid, changeStep } from \"../../reservation/actions\";\nimport { showLoader, hideLoader } from \"../../loader/actions\";\nimport Checkbox from \"../../controls/checkbox\";\n\nclass ExtrasStepComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    !(this.props.extras && this.props.extras.length > 0) && this.props.onReloadExtras(1);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"extras-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.extras && this.props.extras.map(x => {\n      return React.createElement(\"div\", {\n        className: \"extras-item\",\n        key: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        isChecked: x.selected,\n        text: x.title,\n        price: x.price,\n        onChange: () => this.props.onSelectionChange(x.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  extrasStepReducer\n}) => {\n  return {\n    extras: extrasStepReducer.extras,\n    selectedExtras: extrasStepReducer.selectedExtras\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onReloadExtras: itemTypeId => {\n      dispatch(showLoader());\n      dispatch(fetchExtras(itemTypeId)).then(() => dispatch(hideLoader()));\n    },\n    onStepConfirmed: () => dispatch(changeStep(2)),\n    onInvalidStep: () => dispatch(setCurrentStepInvalid()),\n    onValidStep: () => dispatch(setCurrentStepValid()),\n    onSelectionChange: id => dispatch(selectionChanged(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtrasStepComponent);","map":{"version":3,"sources":["/Users/rozyckj/repos/mawayRental/MawayFrontend/src/extras-step/components/index.js"],"names":["React","connect","fetchExtras","selectionChanged","nextStep","setCurrentStepValid","setCurrentStepInvalid","changeStep","showLoader","hideLoader","Checkbox","ExtrasStepComponent","Component","constructor","props","componentDidMount","extras","length","onReloadExtras","render","map","x","id","selected","title","price","onSelectionChange","mapStateToProps","extrasStepReducer","selectedExtras","mapDispatchToProps","dispatch","ownProps","itemTypeId","then","onStepConfirmed","onInvalidStep","onValidStep"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,YAA9C;AACA,SACEC,QADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,UAJF,QAKO,2BALP;AAMA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,sBAAvC;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,mBAAN,SAAkCX,KAAK,CAACY,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,MAAE,KAAKD,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,MAAlB,GAA2B,CAAlD,KACE,KAAKH,KAAL,CAAWI,cAAX,CAA0B,CAA1B,CADF;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWE,MAAX,IACC,KAAKF,KAAL,CAAWE,MAAX,CAAkBI,GAAlB,CAAsBC,CAAC,IAAI;AACzB,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEA,CAAC,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAED,CAAC,CAACE,QADf;AAEE,QAAA,IAAI,EAAEF,CAAC,CAACG,KAFV;AAGE,QAAA,KAAK,EAAEH,CAAC,CAACI,KAHX;AAIE,QAAA,QAAQ,EAAE,MAAM,KAAKX,KAAL,CAAWY,iBAAX,CAA6BL,CAAC,CAACC,EAA/B,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD,KAXD,CAFJ,CADF;AAiBD;;AA5B+C;;AA+BlD,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AACjD,SAAO;AACLZ,IAAAA,MAAM,EAAEY,iBAAiB,CAACZ,MADrB;AAELa,IAAAA,cAAc,EAAED,iBAAiB,CAACC;AAF7B,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjD,SAAO;AACLd,IAAAA,cAAc,EAAEe,UAAU,IAAI;AAC5BF,MAAAA,QAAQ,CAACvB,UAAU,EAAX,CAAR;AACAuB,MAAAA,QAAQ,CAAC7B,WAAW,CAAC+B,UAAD,CAAZ,CAAR,CAAkCC,IAAlC,CAAuC,MAAMH,QAAQ,CAACtB,UAAU,EAAX,CAArD;AACD,KAJI;AAKL0B,IAAAA,eAAe,EAAE,MAAMJ,QAAQ,CAACxB,UAAU,CAAC,CAAD,CAAX,CAL1B;AAML6B,IAAAA,aAAa,EAAE,MAAML,QAAQ,CAACzB,qBAAqB,EAAtB,CANxB;AAOL+B,IAAAA,WAAW,EAAE,MAAMN,QAAQ,CAAC1B,mBAAmB,EAApB,CAPtB;AAQLqB,IAAAA,iBAAiB,EAAEJ,EAAE,IAAIS,QAAQ,CAAC5B,gBAAgB,CAACmB,EAAD,CAAjB;AAR5B,GAAP;AAUD,CAXD;;AAaA,eAAerB,OAAO,CACpB0B,eADoB,EAEpBG,kBAFoB,CAAP,CAGbnB,mBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchExtras, selectionChanged } from \"../actions\";\nimport {\n  nextStep,\n  setCurrentStepValid,\n  setCurrentStepInvalid,\n  changeStep\n} from \"../../reservation/actions\";\nimport { showLoader, hideLoader } from \"../../loader/actions\";\nimport Checkbox from \"../../controls/checkbox\";\n\nclass ExtrasStepComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    !(this.props.extras && this.props.extras.length > 0) &&\n      this.props.onReloadExtras(1);\n  }\n\n  render() {\n    return (\n      <div className=\"extras-container\">\n        {this.props.extras &&\n          this.props.extras.map(x => {\n            return (\n              <div className=\"extras-item\" key={x.id}>\n                <Checkbox\n                  isChecked={x.selected}\n                  text={x.title}\n                  price={x.price}\n                  onChange={() => this.props.onSelectionChange(x.id)}\n                />\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ extrasStepReducer }) => {\n  return {\n    extras: extrasStepReducer.extras,\n    selectedExtras: extrasStepReducer.selectedExtras\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onReloadExtras: itemTypeId => {\n      dispatch(showLoader());\n      dispatch(fetchExtras(itemTypeId)).then(() => dispatch(hideLoader()));\n    },\n    onStepConfirmed: () => dispatch(changeStep(2)),\n    onInvalidStep: () => dispatch(setCurrentStepInvalid()),\n    onValidStep: () => dispatch(setCurrentStepValid()),\n    onSelectionChange: id => dispatch(selectionChanged(id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExtrasStepComponent);\n"]},"metadata":{},"sourceType":"module"}