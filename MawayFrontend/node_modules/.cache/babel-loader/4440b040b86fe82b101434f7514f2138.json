{"ast":null,"code":"var _jsxFileName = \"/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/summary/components/summaryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from '../../../loader/actions';\nimport LoaderBar from \"../../../loader/components/loaderBar\";\nimport { fetchSummary } from \"../actions\";\n\nclass SummaryDetailsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(LoaderBar, {\n      show: this.props.isFetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), \"tete\");\n  }\n\n}\n\nconst mapStateToProps = ({\n  dateStepReducer,\n  itemStepReducer,\n  extrasStepReducer,\n  summaryReducer\n}) => {\n  var _extrasStepReducer$ex;\n\n  debugger;\n  return {\n    isFetching: summaryReducer.isFetching,\n    from: dateStepReducer.dateFrom,\n    to: dateStepReducer.dateTo,\n    itemTypeId: itemStepReducer.selectedItemId,\n    selectedExtras: (_extrasStepReducer$ex = extrasStepReducer.extras.find(x => x.selected === true)) === null || _extrasStepReducer$ex === void 0 ? void 0 : _extrasStepReducer$ex.map(x => 1)\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSummaryReload: (itemTypeId, extrasIds, from, to) => dispatch(fetchSummary(itemTypeId, extrasIds, from, to))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryDetailsComponent);","map":{"version":3,"sources":["/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/summary/components/summaryDetails.js"],"names":["React","connect","showLoader","LoaderBar","fetchSummary","SummaryDetailsComponent","Component","constructor","props","componentDidMount","console","log","render","isFetching","mapStateToProps","dateStepReducer","itemStepReducer","extrasStepReducer","summaryReducer","from","dateFrom","to","dateTo","itemTypeId","selectedItemId","selectedExtras","extras","find","x","selected","map","mapDispatchToProps","dispatch","ownProps","onSummaryReload","extrasIds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,uBAAN,SAAsCL,KAAK,CAACM,SAA5C,CAAsD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,SAAP;AAIH;;AAdiD;;AAiBtD,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,iBAApC;AAAuDC,EAAAA;AAAvD,CAAD,KAA6E;AAAA;;AACjG;AACA,SAAO;AACHL,IAAAA,UAAU,EAAEK,cAAc,CAACL,UADxB;AAEHM,IAAAA,IAAI,EAAEJ,eAAe,CAACK,QAFnB;AAGHC,IAAAA,EAAE,EAAEN,eAAe,CAACO,MAHjB;AAIHC,IAAAA,UAAU,EAAEP,eAAe,CAACQ,cAJzB;AAKHC,IAAAA,cAAc,2BAAER,iBAAiB,CAACS,MAAlB,CAAyBC,IAAzB,CAA8BC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,IAAlD,CAAF,0DAAE,sBAAyDC,GAAzD,CAA6DF,CAAC,IAAE,CAAhE;AALb,GAAP;AAOH,CATD;;AAWA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO;AACHC,IAAAA,eAAe,EAAE,CAACX,UAAD,EAAaY,SAAb,EAAwBhB,IAAxB,EAA8BE,EAA9B,KAAqCW,QAAQ,CAAC5B,YAAY,CAACmB,UAAD,EAAaY,SAAb,EAAwBhB,IAAxB,EAA8BE,EAA9B,CAAb;AAD3D,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACa,eAAD,EAAkBiB,kBAAlB,CAAP,CAA6C1B,uBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from '../../../loader/actions';\nimport LoaderBar from \"../../../loader/components/loaderBar\";\nimport { fetchSummary } from \"../actions\";\n\nclass SummaryDetailsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return <div>\n            <LoaderBar show={this.props.isFetching} />\n            tete\n        </div>\n    }\n}\n\nconst mapStateToProps = ({ dateStepReducer, itemStepReducer, extrasStepReducer, summaryReducer }) => {\n    debugger;\n    return {\n        isFetching: summaryReducer.isFetching,\n        from: dateStepReducer.dateFrom,\n        to: dateStepReducer.dateTo,\n        itemTypeId: itemStepReducer.selectedItemId,\n        selectedExtras: extrasStepReducer.extras.find(x => x.selected === true)?.map(x=>1)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onSummaryReload: (itemTypeId, extrasIds, from, to) => dispatch(fetchSummary(itemTypeId, extrasIds, from, to))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryDetailsComponent);\n"]},"metadata":{},"sourceType":"module"}