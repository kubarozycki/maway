{"ast":null,"code":"import _objectSpread from \"/Users/rozyckj/repos/mawayRental/MawayFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { EMAIL_FIELD, NAME_FIELD, PHONE_FIELD, SURNAME_FIELD, VALUE_CHANGED, FORM_CONFIRMED } from './actions';\n\nconst requiredValidator = value => !!value;\n\nconst maxLengthValidator = (value, maxLength) => !!value && value.length < maxLength;\n\nconst minLengthValidator = (value, minLength) => !!value && value.length < minLength;\n\nconst formValidators = {\n  [NAME_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Name is required'\n  }, {\n    validatorFn: value => minLengthValidator(),\n    errorMsg: 'Name should be minimum 2 characters long'\n  }],\n  [SURNAME_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Name is required'\n  }, {\n    validatorFn: value => minLengthValidator(),\n    errorMsg: 'Name should be minimum 2 characters long'\n  }],\n  [EMAIL_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Name is required'\n  }, {\n    validatorFn: value => minLengthValidator(),\n    errorMsg: 'Name should be minimum 2 characters long'\n  }],\n  [PHONE_FIELD]: [{\n    validatorFn: requiredValidator,\n    errorMsg: 'Name is required'\n  }, {\n    validatorFn: value => minLengthValidator(),\n    errorMsg: 'Name should be minimum 2 characters long'\n  }]\n};\nconst initialState = {\n  formValues: {\n    [NAME_FIELD]: '',\n    [SURNAME_FIELD]: '',\n    [EMAIL_FIELD]: '',\n    [PHONE_FIELD]: ''\n  },\n  formValidation: {\n    [NAME_FIELD]: {\n      isValid: false,\n      validators: [requiredValidator, value => maxLengthValidator(value, 100), value => minLengthValidator(value, 2)]\n    },\n    [SURNAME_FIELD]: {\n      isValid: false\n    },\n    [EMAIL_FIELD]: {\n      isValid: false\n    },\n    [PHONE_FIELD]: {\n      isValid: false\n    }\n  }\n};\nexport default function confirmationStepReducer(state = initialState, action) {\n  switch (action.type) {\n    case FORM_CONFIRMED:\n      for (let formValidationKey in state.formValidation) {}\n\n      const validationResults = {};\n      return _objectSpread({}, state, {\n        formValidation: validationResults\n      });\n\n    case VALUE_CHANGED:\n      return _objectSpread({}, state, {\n        formValues: _objectSpread({}, state.formValues, {\n          [action.field]: action.value\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/reservation-steps/confirmation-step/reducers.js"],"names":["EMAIL_FIELD","NAME_FIELD","PHONE_FIELD","SURNAME_FIELD","VALUE_CHANGED","FORM_CONFIRMED","requiredValidator","value","maxLengthValidator","maxLength","length","minLengthValidator","minLength","formValidators","validatorFn","errorMsg","initialState","formValues","formValidation","isValid","validators","confirmationStepReducer","state","action","type","formValidationKey","validationResults","field"],"mappings":"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","sourcesContent":["import {EMAIL_FIELD, NAME_FIELD, PHONE_FIELD, SURNAME_FIELD, VALUE_CHANGED, FORM_CONFIRMED} from './actions';\n\nconst requiredValidator = (value) => !!value;\nconst maxLengthValidator = (value, maxLength) => !!value && value.length < maxLength;\nconst minLengthValidator = (value, minLength) => !!value && value.length < minLength;\n\nconst formValidators = {\n    [NAME_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Name is required'}, {validatorFn:  value => minLengthValidator(), errorMsg: 'Name should be minimum 2 characters long'}],\n    [SURNAME_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Name is required'}, {validatorFn:  value => minLengthValidator(), errorMsg: 'Name should be minimum 2 characters long'}],\n    [EMAIL_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Name is required'}, {validatorFn:  value => minLengthValidator(), errorMsg: 'Name should be minimum 2 characters long'}],\n    [PHONE_FIELD]: [ {validatorFn: requiredValidator, errorMsg: 'Name is required'}, {validatorFn:  value => minLengthValidator(), errorMsg: 'Name should be minimum 2 characters long'}]\n}\n\n\nconst initialState =\n    {\n        formValues: {\n            [NAME_FIELD]: '',\n            [SURNAME_FIELD]: '',\n            [EMAIL_FIELD]: '',\n            [PHONE_FIELD]: ''\n        },\n        formValidation: {\n            [NAME_FIELD]: { isValid: false, validators:\n                    [ requiredValidator,\n                        value => maxLengthValidator(value, 100),\n                        value => minLengthValidator(value, 2)\n                    ] },\n            [SURNAME_FIELD]: { isValid: false },\n            [EMAIL_FIELD]: { isValid: false },\n            [PHONE_FIELD]: { isValid: false }\n        }\n    }\n\n\n\n\n\nexport default function confirmationStepReducer(state = initialState, action) {\n    switch (action.type) {\n        case FORM_CONFIRMED:\n            for (let formValidationKey in state.formValidation) {\n\n            }\n\n            const validationResults = {};\n\n            return {\n                ...state,\n                formValidation: validationResults\n            }\n        case VALUE_CHANGED:\n            return {\n                ...state,\n                formValues: { ...state.formValues, [action.field]: action.value }\n            }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}