{"ast":null,"code":"var _jsxFileName = \"/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/summary/components/summaryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from '../../../loader/actions';\nimport LoaderBar from \"../../../loader/components/loaderBar\";\nimport { fetchSummary } from \"../actions\";\n\nclass SummaryDetailsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.onSummaryReload(this.props.itemTypeId, this.props.selectedExtras, this.props.from, this.props.to);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(LoaderBar, {\n      show: this.props.isFetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), this.props.from, \" \", this.props.to, \" (\", this.props.data.rentalDays, \") tete\");\n  }\n\n}\n\nconst mapStateToProps = ({\n  dateStepReducer,\n  itemStepReducer,\n  extrasStepReducer,\n  summaryReducer\n}) => {\n  return {\n    isFetching: summaryReducer.isFetching,\n    from: dateStepReducer.dateFrom,\n    to: dateStepReducer.dateTo,\n    itemTypeId: itemStepReducer.selectedItemId,\n    selectedExtras: extrasStepReducer.extras.filter(x => x.selected).map(x => x.id),\n    data: summaryReducer.data\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSummaryReload: (itemTypeId, extrasIds, from, to) => dispatch(fetchSummary(itemTypeId, extrasIds, from, to))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryDetailsComponent);","map":{"version":3,"sources":["/Users/rozyckj/repos/mawayRental/MawayFrontend/src/modules/summary/components/summaryDetails.js"],"names":["React","connect","showLoader","LoaderBar","fetchSummary","SummaryDetailsComponent","Component","constructor","props","componentDidMount","onSummaryReload","itemTypeId","selectedExtras","from","to","render","isFetching","data","rentalDays","mapStateToProps","dateStepReducer","itemStepReducer","extrasStepReducer","summaryReducer","dateFrom","dateTo","selectedItemId","extras","filter","x","selected","map","id","mapDispatchToProps","dispatch","ownProps","extrasIds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,uBAAN,SAAsCL,KAAK,CAACM,SAA5C,CAAsD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,KAAL,CAAWE,eAAX,CACI,KAAKF,KAAL,CAAWG,UADf,EAEI,KAAKH,KAAL,CAAWI,cAFf,EAGI,KAAKJ,KAAL,CAAWK,IAHf,EAII,KAAKL,KAAL,CAAWM,EAJf;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAEF,KAAKR,KAAL,CAAWK,IAFT,OAEgB,KAAKL,KAAL,CAAWM,EAF3B,QAEiC,KAAKN,KAAL,CAAWS,IAAX,CAAgBC,UAFjD,WAAP;AAKH;;AAnBiD;;AAsBtD,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,iBAApC;AAAuDC,EAAAA;AAAvD,CAAD,KAA6E;AACjG,SAAO;AACHP,IAAAA,UAAU,EAAEO,cAAc,CAACP,UADxB;AAEHH,IAAAA,IAAI,EAAEO,eAAe,CAACI,QAFnB;AAGHV,IAAAA,EAAE,EAAEM,eAAe,CAACK,MAHjB;AAIHd,IAAAA,UAAU,EAAEU,eAAe,CAACK,cAJzB;AAKHd,IAAAA,cAAc,EAAEU,iBAAiB,CAACK,MAAlB,CAAyBC,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,CAACC,QAAvC,EAAiDC,GAAjD,CAAqDF,CAAC,IAAEA,CAAC,CAACG,EAA1D,CALb;AAMHf,IAAAA,IAAI,EAAEM,cAAc,CAACN;AANlB,GAAP;AAQH,CATD;;AAWA,MAAMgB,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO;AACHzB,IAAAA,eAAe,EAAE,CAACC,UAAD,EAAayB,SAAb,EAAwBvB,IAAxB,EAA8BC,EAA9B,KAAqCoB,QAAQ,CAAC9B,YAAY,CAACO,UAAD,EAAayB,SAAb,EAAwBvB,IAAxB,EAA8BC,EAA9B,CAAb;AAD3D,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACkB,eAAD,EAAkBc,kBAAlB,CAAP,CAA6C5B,uBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from '../../../loader/actions';\nimport LoaderBar from \"../../../loader/components/loaderBar\";\nimport { fetchSummary } from \"../actions\";\n\nclass SummaryDetailsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.onSummaryReload(\n            this.props.itemTypeId,\n            this.props.selectedExtras,\n            this.props.from,\n            this.props.to);\n    }\n\n    render() {\n        return <div>\n            <LoaderBar show={this.props.isFetching} />\n            {this.props.from} {this.props.to} ({this.props.data.rentalDays})\n            tete\n        </div>\n    }\n}\n\nconst mapStateToProps = ({ dateStepReducer, itemStepReducer, extrasStepReducer, summaryReducer }) => {\n    return {\n        isFetching: summaryReducer.isFetching,\n        from: dateStepReducer.dateFrom,\n        to: dateStepReducer.dateTo,\n        itemTypeId: itemStepReducer.selectedItemId,\n        selectedExtras: extrasStepReducer.extras.filter(x => x.selected).map(x=>x.id),\n        data: summaryReducer.data\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onSummaryReload: (itemTypeId, extrasIds, from, to) => dispatch(fetchSummary(itemTypeId, extrasIds, from, to))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryDetailsComponent);\n"]},"metadata":{},"sourceType":"module"}